#!/usr/bin/env python3.5
# -*-coding:UTF-8 -*

'''
#
'''

import sys
import argparse
import redis
import struct, socket
from datetime import datetime
import numpy as np
import ast
from pprint import pprint
from statistics import mean, median, pstdev, pvariance


# CONFIG #
dataset = "blackhole27"
busybox_defFun = ['acpid', 'adjtimex', 'ar', 'arp', 'arping', 'ash', 'awk', 'basename', 'blockdev', 'brctl', 'bunzip2', 'bzcat', 'bzip2', 'cal', 'cat', 'chgrp', 'chmod', 'chown', 'chpasswd', 'chroot', 'chvt', 'clear', 'cmp', 'cp', 'cpio', 'crond', 'crontab', 'cttyhack', 'cut', 'date', 'dc', 'dd', 'deallocvt', 'depmod', 'devmem', 'df', 'diff', 'dirname', 'dmesg', 'dnsdomainname', 'dos2unix', 'dpkg', 'dpkg-deb', 'du', 'dumpkmap', 'dumpleases', 'echo', 'ed', 'egrep', 'env', 'expand', 'expr', 'false', 'fdisk', 'fgrep', 'find', 'fold', 'free', 'freeramdisk', 'fstrim', 'ftpget', 'ftpput', 'getopt', 'getty', 'grep', 'groups', 'gunzip', 'gzip', 'halt', 'head', 'hexdump', 'hostid', 'hostname', 'httpd', 'hwclock', 'id', 'ifconfig', 'ifdown', 'ifup', 'init', 'insmod', 'ionice', 'ip', 'ipcalc', 'kill', 'killall', 'klogd', 'last', 'less', 'ln', 'loadfont', 'loadkmap', 'logger', 'login', 'logname', 'logread', 'losetup', 'ls', 'lsmod', 'lzcat', 'lzma', 'lzop', 'lzopcat', 'md5sum', 'mdev', 'microcom', 'mkdir', 'mkfifo', 'mknod', 'mkswap', 'mktemp', 'modinfo', 'modprobe', 'more', 'mount', 'mt', 'mv', 'nameif', 'nc', 'netstat', 'nslookup', 'od', 'openvt', 'passwd', 'patch', 'pidof', 'ping', 'ping6', 'pivot_root', 'poweroff', 'printf', 'ps', 'pwd', 'rdate', 'readlink', 'realpath', 'reboot', 'renice', 'reset', 'rev', 'rm', 'rmdir', 'rmmod', 'route', 'rpm', 'rpm2cpio', 'run-parts', 'sed', 'seq', 'setkeycodes', 'setsid', 'sh', 'sha1sum', 'sha256sum', 'sha512sum', 'sleep', 'sort', 'start-stop-daemon', 'stat', 'static-sh', 'strings', 'stty', 'su', 'sulogin', 'swapoff', 'swapon', 'switch_root', 'sync', 'sysctl', 'syslogd', 'tac', 'tail', 'tar', 'taskset', 'tee', 'telnet', 'telnetd', 'test', 'tftp', 'time', 'timeout', 'top', 'touch', 'tr', 'traceroute', 'traceroute6', 'true', 'tty', 'tunctl', 'udhcpc', 'udhcpd', 'umount', 'uname', 'uncompress', 'unexpand', 'uniq', 'unix2dos', 'unlzma', 'unlzop', 'unxz', 'unzip', 'uptime', 'usleep', 'uudecode', 'uuencode', 'vconfig', 'vi', 'watch', 'watchdog', 'wc', 'wget', 'which', 'who', 'whoami', 'xargs', 'xz', 'xzcat', 'yes', 'zcat']

# REDIS #
serv_timestamp = redis.StrictRedis(
    host='localhost',
    port=6501,
    db=6)

def make_stat():
    print("Computing Stats")

    dico_malware_name = {}

    all_sessions = serv_timestamp.keys('??????????.?????????')
    tot_sess_num = len(all_sessions)
    iter_num = 0
    for timestamp in all_sessions:
        if(iter_num % int(tot_sess_num/100) == 0):
            print("progress: {}%".format(int(iter_num/tot_sess_num*100)), sep=' ', end='\r', flush=True)
        iter_num += 1

        for session in serv_timestamp.smembers(timestamp):
            session = ast.literal_eval(session.decode('utf-8'))
            ip_remote = session['ip_remote']
            session_remote = session['session_remote']
            
            #ranking
            array_remote = session_remote.splitlines()

            for cmd in array_remote:
                if "/bin/busybox " in cmd:
                    malware_name = cmd.replace('/bin/busybox ', '')
                    if malware_name in busybox_defFun:
                        continue
                    if malware_name in dico_malware_name:
                        dico_malware_name[malware_name].append(timestamp)
                    else:
                        dico_malware_name[malware_name] = [timestamp]

    for k, t in dico_malware_name.items():
        print(k, len(t))

    with open('make_stats_malware_name_over_time.output', 'w') as f:
        f.write(str([dico_malware_name]))



  
if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Makes stats about the frequency of IP within a acceptation window')
    args = parser.parse_args()
    
    make_stat()

